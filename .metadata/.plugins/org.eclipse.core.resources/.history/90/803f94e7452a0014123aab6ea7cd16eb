import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Comparator;
import java.util.StringTokenizer;
import java.util.TreeSet;


/**
 * Codeforces.com 
 * Round 260 
 * Division 2
 * Problem A
 * @author Edward McEnrue
 *
 */
public class CF260_Laptops {
	
	static class laptop {
		int price;
		int qlty;
	}
	
	public static void main(String[] args) {
		MyScanner in = new MyScanner();
		
		int n = in.nextInt();
		
		laptop[] laps = new laptop[n];
		TreeSet<Integer> qltyTree = new TreeSet<Integer>();
		
		for(int i = 0; i < n; i++)
		{
			int p = in.nextInt();
			laps[i].price = p;
			
			int q = in.nextInt();
			laps[i].qlty = q;
			qltyTree.add(q);
			
		}
		
		
		//Sort the array on prices
		
		Arrays.sort(laps, new Comparator<laptop>()
		{
			@Override
			public int compare(laptop l1, laptop l2)
			{
				Integer l1Price = l1.price;
				Integer l2Price = l2.price;
				
				return l1Price.compareTo(l2Price);
			}
		});
		
		//Take the highest priced laptop and see if there is a higher quality in the other array
		
		for(int i = n-1; i >=0; i--)
		{
			int highPriceQ = laps[i].qlty;
			if(qltyTree.higher(highPriceQ) != null)
			{
				System.out.println("Happy Alex");
				return;
			}
			qltyTree.remove(highPriceQ);
		}
		System.out.println("Poor Alex");

	}
	
	

	// -----------MyScanner class for faster input----------
	public static class MyScanner {
		BufferedReader br;
		StringTokenizer st;

		public MyScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}

	}
	// --------------------------------------------------------
}
