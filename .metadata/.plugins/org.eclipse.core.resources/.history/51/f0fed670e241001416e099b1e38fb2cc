import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;


/**
 * Codeforces.com 
 * Round 3
 * Division 2
 * Problem A
 * @author Edward McEnrue
 */
public class Knitting {

	public static void main(String[] args) {
		MyScanner in = new MyScanner();

		int n = in.nextInt();
		int m = in.nextInt();
		int k = in.nextInt();
		
		
		while(n != 0 || m != 0 || k != 0)
		{
			int[] p = new int[k];
			for(int i = 0; i < k; i++)
			{
				p[i] = in.nextInt();
			}
			int total = 0;
			int rep = 0;
			int dif = 0;
			for(int i = 0; i < m; i++)
			{
				if(k == 1){
					if(i%2 == 0 && i == 0){
							total +=n;
							rep = 0;
					}
					else{
						total+=n+p[0]*rep;
					}
				}
				else
				{
					
					if(i%k == 0)
					{
						if(i == 0)
						{
							total += n;
						}
						else
						{
							total += total;
						}
					}
					else
					{
						dif += p[i%k-1];
						total += n + dif; //a;jsdf;lk
					}
				}
				rep++;
				
				System.out.println("mod calculator: " + i + "%"+k+"-1"+"="+((i%k)-1));
				System.out.println("debug: "+total);
				
			}
			
			System.out.println(total);
				
			
			n = in.nextInt();
			m = in.nextInt();
			k = in.nextInt();
		}
	}

	// -----------MyScanner class for faster input----------
	public static class MyScanner {
		BufferedReader br;
		StringTokenizer st;

		public MyScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}

	}
	// --------------------------------------------------------
}
