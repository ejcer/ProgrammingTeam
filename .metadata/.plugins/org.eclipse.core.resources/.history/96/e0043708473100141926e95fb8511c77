

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;


public class VJ1_First_Composed_Then_Transposed {

	public static void main(String[] args) {
		new VJ1_First_Composed_Then_Transposed().run();
	}
	
	
	
	HashMap<String, Integer> mScale = new HashMap<String, Integer>();
	HashMap<Integer, String> revScale = new HashMap<Integer, String>();
	

	public void run() {

		Scanner in = new Scanner(System.in);
		
		mScale.put("Ab", 12);
		mScale.put("A", 1); //
		mScale.put("A#", 2); //
		mScale.put("Bb", 2);
		mScale.put("B", 3); //
		mScale.put("B#", 4);
		mScale.put("Cb", 3);
		mScale.put("C", 4); //
		mScale.put("C#", 5); //
		mScale.put("Db", 5);
		mScale.put("D", 6); // 
		mScale.put("D#", 7); //
		mScale.put("Eb", 7);
		mScale.put("E", 8); //
		mScale.put("E#", 9);
		mScale.put("Fb", 8);
		mScale.put("F", 9); // 
		mScale.put("F#", 10); //
		mScale.put("Gb", 10);
		mScale.put("G", 11); // 
		mScale.put("G#", 12); //
		
		
		for (String key : mScale.keySet()){
		    revScale.put(mScale.get(key), key);
		}
		
		ArrayList<Integer> sheet = new ArrayList<Integer>();
		
		String notesLine = in.nextLine();
		int transpose = in.nextInt();
		
		while(!notesLine.equals("***"))
		{
			String[] notes = notesLine.split(" ");
			
			transpose = transpose%12;
			
			
		}
		
		
		
		
		
		
		
		
		// Main loop
//		while (true) {
//
//			
//			ArrayList<Integer> sheet = new ArrayList<Integer>();
//			
//			String note = in.next();
//			
//			while(!isNumeric(note) && !note.equals("***"))
//			{
//				System.out.println("a;skdjf;alskjdfal");
//				sheet.add(mScale.get(note));
//			}
//			if(isNumeric(note))
//			{
//				int scale = Integer.parseInt(note);
//				scale = scale%12; //does not work for negatives
//				
//				for(int sNote:sheet)
//				{
//					sNote += scale;
//					sNote = sNote%12;
//					System.out.print(revScale.get(sNote) + " ");
//				}
//			}
//			else
//			{
//				break;
//			}
//		}

	}
	
	public static boolean isNumeric(String str)  
	{  
	  try  
	  {  
	    double d = Double.parseDouble(str);  
	  }  
	  catch(NumberFormatException nfe)  
	  {  
	    return false;  
	  }  
	  return true;  
	}
}
