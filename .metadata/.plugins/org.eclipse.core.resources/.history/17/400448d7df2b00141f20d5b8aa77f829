import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;


/**
 * Codeforces.com 
 * Round TeamWarmUp
 * Division 2
 * Problem B
 * @author Edward McEnrue
 *
 */
public class CFTeamWarmUp_Canonical_Cycle_Representation {

	public static void main(String[] args) {
		MyScanner in = new MyScanner();
		
		int n = in.nextInt();
		
		ArrayList<Integer> num = new ArrayList<Integer>();
		
		for(int i = 0; i < n; i++)
		{
			num.add(in.nextInt());
		}
		
		int start = 0;
		int cnt = 0;
		while(num.size() != 0)
		{
			int end = num.get(start-cnt);
			num.remove(start-cnt);
			start = end;
			cnt++;
			System.out.print(num.remove(n-1));
		}
		
		
		
		
	}
	
//	private static void set(int start, int prev, ArrayList<Integer> num)
//	{
//		System.out.print(num.get(start));
//		if(start> prev)
//		{
//			num.remove(start);
//			set(num.get(start-1), start, num);
//			
//		}
//		
//	}

	// -----------MyScanner class for faster input----------
	public static class MyScanner {
		BufferedReader br;
		StringTokenizer st;

		public MyScanner() {
			br = new BufferedReader(new InputStreamReader(System.in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return Integer.parseInt(next());
		}

		long nextLong() {
			return Long.parseLong(next());
		}

		double nextDouble() {
			return Double.parseDouble(next());
		}

		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}

	}
	// --------------------------------------------------------
}
